/* COMMON */
body {
  /* 기본적인 구조적인 것들을 상속되는 것을 이용해서 여기에 선언해주는 것이 좋다. */
  color: #333;
  font-size: 16px;
  font-weight: 400;
  line-height: 1.4;
  /* 폰트에 따라 최적의 높이가 다를 수 있다. */
  font-family: 'Nanum Gothic', sans-serif;
  /* 폰트를 적용하는 코드이다. */
  height: 3000px;
}

img {
  display: block;
}

a {
  text-decoration: none;
}

.inner {
  width: 1100px;
  margin: 0 auto;
  position: relative;
}

.btn{
  width: 130px;
  padding: 10px;
  border: 2px solid #333;
  border-radius: 4px;
  color: #333;
  font-size: 16px;
  /* 자식요소에도 이어간다고 함. ??? */
  font-weight: 700;
  text-align: center;
  cursor: pointer;
  box-sizing: border-box;
  /* border를 기준으로 뭐 한다는 데 뭔소리여 ??? */
  display: block;
  /* 혹시 모르는 크기를 부여하지 않으면 나오지 않는 애들을 생각하고, block하면 된다. */
  transition: .4s;
  /* 얘는 여기에 왜 넣었을까??? */
}

.btn:hover{
  background-color: #333;
  color: #fff;
}
.btn.btn--reverse{
  background-color: #333;
  color: #fff;
}
.btn.btn--reverse:hover{
  background-color: transparent;
  color: #333;
}
/* 선택자 우선순위가 있다고 한다.*/
.btn.btn--brown{
  color: #592B18;
  border-color: #592B18;
}
.btn.btn--brown:hover{
  color: #FFF;
  background-color: #592B18;
}
.btn.btn--gold{
  color: #D9AA8A;
  border-color: #D9AA8A;
}
.btn.btn--gold:hover{
  color: #FFF;
  background-color: #FFF;
}
.btn.btn--white{
  color: #FFF;
  border-color: #FFF;
}
.btn.btn--white:hover{
  color: #333;
  background-color: #FFF;
}

/* HEADER */
header {
  width: 100%;
  background-color: #f6f5f0;
  border-bottom: 1px solid #c8c8c8;
  position: fixed;
  /* 다른 요소들의 배치와 관계 없이 뷰포트를 기준으로 배치하겠다. */
  top: 0;
  z-index: 9;
}

header>.inner {
  height: 120px;
}

header .logo {
  height: 75px;
  position: absolute;
  /* absolute를 사용할 때는 구조적인 부모 요소에 position이 있는지 확인해야한다. */
  /* 수직 가운데 정렬? */
  top: 0px;
  bottom: 0px;
  left: 0px;
  margin: auto;
}

header .sub-menu {
  position: absolute;
  top: 10px;
  right: 0px;
  display: flex;
}

header .sub-menu ul.menu {
  display: flex;
}

header .sub-menu ul.menu li {
  position: relative;
}

header .sub-menu ul.menu li::before {
  content: "";
  display: block;
  width: 1px;
  height: 12px;
  background-color: #e5e5e5;
  position: absolute;
  top: 0;
  bottom: 0;
  margin: auto;
}

header .sub-menu ul.menu li:first-child:before {
  display: none;
}

header .sub-menu ul.menu li a {
  /* background-color: white; */
  /* 디자인 뼈대 만들때는 이렇게 해줌 */
  font-size: 12px;
  padding: 11px 16px;
  display: block;
  color: #656565;
}

header .sub-menu ul.menu li a:hover {
  color: #000;
}

header .sub-menu .search {
  height: 34px;
  position: relative;
}

header .sub-menu .search input {
  width: 36px;
  height: 34px;
  padding: 4px 10px;
  border: 1px solid #ccc;
  box-sizing: border-box;
  border-radius: 5px;
  outline: none;
  background-color: #fff;
  /* 브라우저마다 색이 다를 수 있어서 이렇게 지정해준 것이다. */
  color: #777;
  font-size: 12px;
  transition: width .4s;
}

header .sub-menu .search input:focus {
  width: 190px;
  border-color: #669900;
}

header .sub-menu .search .material-icons {
  height: 24px;
  /* 자동으로 높이를 맞추려면 로고 크기만큼의 높이를 적어주면 된다. */
  position: absolute;
  top: 0;
  bottom: 0;
  right: 5px;
  margin: auto;
  transition: .4s;
}

header .sub-menu .search.focused .material-icons {
  opacity: 0;
}

/* 일치선택자  */

header .main-menu {
  position: absolute;
  bottom: 0;
  right: 0;
  z-index: 1;
  display: flex;
}

header .main-menu .item {}

header .main-menu .item .item__name {
  padding: 10px 20px 34px 20px;
  font-family: Arial, sans-serif;
  font-size: 13px;
}

header .main-menu .item:hover .item__name {
  background-color: #2c2a29;
  color: #669900;
  border-radius: 6px 6px 0px 0px;
}

/* .item에 적용해서 전체에 적용될 수 있도록 한다네.. */
header .main-menu .item .item__contents {
  width: 100%;
  position: fixed;
  left: 0;
  display: none;
}

header .main-menu .item:hover .item__contents {
  display: block;
}

header .main-menu .item .item__contents .contents__menu {
  background-color: #2c2a29;
}

header .main-menu .item .item__contents .contents__menu>ul {
  display: flex;
  padding: 20px 0;
}

header .main-menu .item .item__contents .contents__menu>ul>li {
  width: 220px;
}

header .main-menu .item .item__contents .contents__menu>ul>li h4 {
  padding: 3px 0 12px p;
  font-size: 14px;
  color: #fff;
}

header .main-menu .item .item__contents .contents__menu>ul>li ul {
  /* 구조적으로 넣을 때 참고용으로 사용. 필요 없을 시 삭제하면 돼 */
}

header .main-menu .item .item__contents .contents__menu>ul>li ul li {
  padding: 5px 0;
  font-size: 12px;
  color: #999;
  cursor: pointer;
}

header .main-menu .item .item__contents .contents__menu>ul>li ul li:hover {
  color: #669900;
}

header .main-menu .item .item__contents .contents__texture {
  padding: 26px 0;
  font-size: 12px;
  background-image: url("../images/main_menu_pattern.jpg");
}

header .main-menu .item .item__contents .contents__texture h4 {
  color: #999;
  font-weight: 700;
}

header .main-menu .item .item__contents .contents__texture p {
  color: #669900;
  margin: 4px 0 14px;
}

header .badges {
  position: absolute;
  top: 132px;
  right: 12px;
}

header .badges .badge {
  border-radius: 10px;
  overflow: hidden;
  margin-bottom: 12px;
  box-shadow: 4px 4px 10px rgba(0, 0, 0, .15);
  cursor: pointer;
}

/* VISUAL */
.visual {
  margin-top: 120px;
  /* 이 120px의 수치는 header > .inner에서 가져온 것이다. */
  background-image: url("../images/visual_bg.jpg");
  background-position: center;
  /* 요소 부분은 HTML로 추가하고, 배경 이미지 및 설정은 CSS로 하는 듯 */
  /* 이 상태로는 visual의 컨텐츠 보이는 것이 없기 때문에 배경 이미지가 보이지 않는다. */
}

.visual .inner {
  height: 646px;
  /* 높이값을 주면 배경 이미지가 높이 크기만큼 보이게 된다. */
}

.visual .title {
  /* inner는 구조적으로는 title과 상관이 없기 때문에 이렇게 생략해주는 것이 가독성에 도움이 됨 */
  position: absolute;
  /* 부모요소를 기준으로 위치하도록 한다. 부모요소에 relative있음 */
  top: 88px;
  left: -10px;
}

.visual .title .btn {
  position: absolute;
  top: 259px;
  left: 173px;
}

.visual .cup1.image {
  /* 클래스 선택자 두개가 붙어 있으니까 동시에 조건이 만족하는 것을 가리키는 일치 선택자 */
  position: absolute;
  bottom: 0;
  right: -47px;
}

.visual .cup1.text {
  position: absolute;
  top: 38px;
  right: 171px;
}

.visual .cup2.image {
  position: absolute;
  bottom: 0;
  right: 162px;
}

.visual .cup2.text {
  position: absolute;
  top: 321px;
  right: 416px;
}

.visual .spoon {
  position: absolute;
  bottom: 0;
  left: 275px;
}
/* 여기까지 할 때 작업한 것이 이전에 작업한 것을 덮는 것을 확인할 수 있음.*/
/* 이제 쌓인 순서로 인한 문제가 발생함을 인지 */
/* 이제 z-index를 추가함 */
.visual .fade-in{
  opacity: 0;
}

/* NOTICE */
.notice{

}
.notice .notice-line{
  position: relative;
}
.notice .notice-line .bg-left{
  position: absolute;
  top: 0;
  left: 0;
  width: 50%;
  height: 100%;
  background-color: #333;
}
.notice .notice-line .bg-right{
  position: absolute;
  top: 0;
  right: 0;
  width: 50%;
  height: 100%;
  background-color: #f6f5ef;
  /* 왜 배경은 50: 50으로 하고, 다시 이너를 비율 맞춰서 하는 걸까? 한번에 하면 안되나? */
}
.notice .notice-line .inner{
  height: 62px;
  display: flex;
  /* 자식요소들이 좌우로 정렬되도록 바꿈. */
}
.notice .notice-line .inner__left{
  width: 60%;
  height: 100%;
  background-color: #333;
  display: flex;
  /* 자식요소들이 수평을 이루도록 하고 싶을 때 작성하면된다. 자식요소 작성 후 작성하라! */
  align-items: center;
}
.notice .notice-line .inner__left h2{
  color: #fff;
  font-size: 17px;
  font-weight: 700;
  margin-right: 20px;
}
.notice .notice-line .inner__left .swiper-container{
  height: 62px;
  flex-grow: 1;
  /* 부모요소에 flex를 하면 자식요소들은 최대한 너비를 없애서 수평을 이룬다. */
  /* flex-grow를 하면 최대한 너비를 넓히도록 한다. */
}
.notice .notice-line .inner__left .swiper-slide{
  height: 62px;
  display: flex;
  align-items: center;

}
.notice .notice-line .inner__left .swiper-slide a{
  color: #fff;
}
.notice .notice-line .inner__left .notice-line__more{
  width: 62px;
  height: 62px;
  display: flex;
  justify-content: center;
  align-items: center;
  /* 수직 정렬을 의미한다. > 어디에 영향? */
}
.notice .notice-line .inner__left .notice-line__more .material-icons{
  color: #fff;
  font-size: 30px;
  /* 아이콘의 기본 크기는 24px라고 한다. */
}
.notice .notice-line .inner__right{
  width: 40%;
  height: 100%;
  display: flex;
  justify-content: flex-end;
  /* 수평 정렬의 끝부분부터 정렬하겠다.*/
  align-items: center;
  /* 수직으로 센터에 아이템을 넣겠다. */
}
.notice .notice-line .inner__right h2{
  font-size: 17px;
  font-weight: 700;
}
.notice .notice-line .inner__right .toggle-promotion{
  width: 62px;
  height: 62px;
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
}
.notice .notice-line .inner__right .toggle-promotion .material-icons{
  font-size: 30px;
}

.notice .promotion{
  height: 693px;
  background-color: #f6f5ef;
  position: relative;
}
.notice .promotion .swiper-container{
  width: calc(819px * 3 +  20px);
  /* 너비값을 우리가 수동으로 계산하고 넣을 수도 있지만 CSS에서는 이렇게 계산해주는 함수를 제공한다.*/
  /* 아래 방식처럼 사용해도 유용하게 사용할 수 있다. */
  /* width: calc(100%-50px); */
  height: 553px;
  position: absolute;
  top: 40px;

  /* 50%를 왼쪽으로 땡기고, 요소 크기의 절반만큼 왼쪽으로 땡기는 이유 */
  left: 50%;
  /* 왼쪽으로 50%가는 것은 뷰포트의 크기에 따라 가운데 기준이 되기 위함이고, */
  margin-left: calc((819px * 3 +  20px) / -2);
  /* 요소의 크기 만큼 왼쪽으로 다시 땡겨서 요소가 가운데에 있도록 하기 위함이다. */
}

.notice .promotion .swiper-slide{
  opacity: .5;
  transition:  opacity 1s;
  /* opacity가 바뀌는데 1초가 걸리도록 해줘라. */
  position: relative;
}
.notice .promotion .swiper-slide-active{
  opacity: 1;
}
.notice .promotion .swiper-slide .btn{
  position: absolute;
  bottom: 0;
  left: 0; 
  right: 0;
  margin: auto;
  /* 요소를 가운데에 배치하는 방식 위의 4줄 */
  /* 너비가 있어야 margin을 계산해주는데, 공통부분에 btn의 너비를 설정해주었기 때문에 따로 작성하지 않아도 돼 */
}