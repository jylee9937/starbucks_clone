/* COMMON */
body {
  /* 기본적인 구조적인 것들을 상속되는 것을 이용해서 여기에 선언해주는 것이 좋다. */
  color: #333;
  font-size: 16px;
  font-weight: 400;
  line-height: 1.4;
  /* 폰트에 따라 최적의 높이가 다를 수 있다. */
  font-family: 'Nanum Gothic', sans-serif;
  /* 폰트를 적용하는 코드이다. */
  /* height: 6000px; */
  /* 이거 있고 없고의 차이가 스크롤의 범위가 달라지더라.. */
}

img {
  display: block;
}

a {
  text-decoration: none;
}

.inner {
  width: 1100px;
  margin: 0 auto;
  position: relative;
}

.btn{
  width: 130px;
  padding: 10px;
  border: 2px solid #333;
  border-radius: 4px;
  color: #333;
  font-size: 16px;
  /* 자식요소에도 이어간다고 함. ??? */
  font-weight: 700;
  text-align: center;
  cursor: pointer;
  box-sizing: border-box;
  /* border를 기준으로 뭐 한다는 데 뭔소리여 ??? */
  display: block;
  /* 혹시 모르는 크기를 부여하지 않으면 나오지 않는 애들을 생각하고, block하면 된다. */
  transition: .4s;
  /* 얘는 여기에 왜 넣었을까??? */
}

.btn:hover{
  background-color: #333;
  color: #fff;
}
.btn.btn--reverse{
  background-color: #333;
  color: #fff;
}
.btn.btn--reverse:hover{
  background-color: transparent;
  color: #333;
}
/* 선택자 우선순위가 있다고 한다.*/
.btn.btn--brown{
  color: #592B18;
  border-color: #592B18;
}
.btn.btn--brown:hover{
  color: #FFF;
  background-color: #592B18;
}
.btn.btn--gold{
  color: #D9AA8A;
  border-color: #D9AA8A;
}
.btn.btn--gold:hover{
  color: #FFF;
  background-color: #FFF;
}
.btn.btn--white{
  color: #FFF;
  border-color: #FFF;
}
.btn.btn--white:hover{
  color: #333;
  background-color: #FFF;
}

.back-to-position{
  opacity: 0;
  transition: 1s;
}
.back-to-position.to-right{
  transform: translateX(-150px);
}
.back-to-position.to-left{
  transform: translateX(150px);
}
.show .back-to-position{
  opacity: 1;
  transform: translateX(0);
}
.show .back-to-position.delay-0{
  transition-delay: 0s;
  /* 명시적으로 0s이지만 클래스명만 보고도 효과 넣을 때 딜레이를 얼만큼 넣었는지 알기 위함 */
}
.show .back-to-position.delay-1{
  transition-delay: .3s;
}
.show .back-to-position.delay-2{
  transition-delay: .6s;
}
.show .back-to-position.delay-3{
  transition-delay: .9s;
}
/* HEADER */
header {
  width: 100%;
  background-color: #f6f5f0;
  border-bottom: 1px solid #c8c8c8;
  position: fixed;
  /* 다른 요소들의 배치와 관계 없이 뷰포트를 기준으로 배치하겠다. */
  top: 0;
  z-index: 9;
}

header>.inner {
  height: 120px;
}

header .logo {
  height: 75px;
  position: absolute;
  /* absolute를 사용할 때는 구조적인 부모 요소에 position이 있는지 확인해야한다. */
  /* 수직 가운데 정렬? */
  top: 0px;
  bottom: 0px;
  left: 0px;
  margin: auto;
}

header .sub-menu {
  position: absolute;
  top: 10px;
  right: 0px;
  display: flex;
}

header .sub-menu ul.menu {
  display: flex;
}

header .sub-menu ul.menu li {
  position: relative;
}

header .sub-menu ul.menu li::before {
  content: "";
  display: block;
  width: 1px;
  height: 12px;
  background-color: #e5e5e5;
  position: absolute;
  top: 0;
  bottom: 0;
  margin: auto;
}

header .sub-menu ul.menu li:first-child:before {
  display: none;
}

header .sub-menu ul.menu li a {
  /* background-color: white; */
  /* 디자인 뼈대 만들때는 이렇게 해줌 */
  font-size: 12px;
  padding: 11px 16px;
  display: block;
  color: #656565;
}

header .sub-menu ul.menu li a:hover {
  color: #000;
}

header .sub-menu .search {
  height: 34px;
  position: relative;
}

header .sub-menu .search input {
  width: 36px;
  height: 34px;
  padding: 4px 10px;
  border: 1px solid #ccc;
  box-sizing: border-box;
  border-radius: 5px;
  outline: none;
  background-color: #fff;
  /* 브라우저마다 색이 다를 수 있어서 이렇게 지정해준 것이다. */
  color: #777;
  font-size: 12px;
  transition: width .4s;
}

header .sub-menu .search input:focus {
  width: 190px;
  border-color: #669900;
}

header .sub-menu .search .material-icons {
  height: 24px;
  /* 자동으로 높이를 맞추려면 로고 크기만큼의 높이를 적어주면 된다. */
  position: absolute;
  top: 0;
  bottom: 0;
  right: 5px;
  margin: auto;
  transition: .4s;
}

header .sub-menu .search.focused .material-icons {
  opacity: 0;
}

/* 일치선택자  */

header .main-menu {
  position: absolute;
  bottom: 0;
  right: 0;
  z-index: 1;
  display: flex;
}

header .main-menu .item {}

header .main-menu .item .item__name {
  padding: 10px 20px 34px 20px;
  font-family: Arial, sans-serif;
  font-size: 13px;
}

header .main-menu .item:hover .item__name {
  background-color: #2c2a29;
  color: #669900;
  border-radius: 6px 6px 0px 0px;
}

/* .item에 적용해서 전체에 적용될 수 있도록 한다네.. */
header .main-menu .item .item__contents {
  width: 100%;
  position: fixed;
  left: 0;
  display: none;
}

header .main-menu .item:hover .item__contents {
  display: block;
}

header .main-menu .item .item__contents .contents__menu {
  background-color: #2c2a29;
}

header .main-menu .item .item__contents .contents__menu>ul {
  display: flex;
  padding: 20px 0;
}

header .main-menu .item .item__contents .contents__menu>ul>li {
  width: 220px;
}

header .main-menu .item .item__contents .contents__menu>ul>li h4 {
  padding: 3px 0 12px p;
  font-size: 14px;
  color: #fff;
}

header .main-menu .item .item__contents .contents__menu>ul>li ul {
  /* 구조적으로 넣을 때 참고용으로 사용. 필요 없을 시 삭제하면 돼 */
}

header .main-menu .item .item__contents .contents__menu>ul>li ul li {
  padding: 5px 0;
  font-size: 12px;
  color: #999;
  cursor: pointer;
}

header .main-menu .item .item__contents .contents__menu>ul>li ul li:hover {
  color: #669900;
}

header .main-menu .item .item__contents .contents__texture {
  padding: 26px 0;
  font-size: 12px;
  background-image: url("../images/main_menu_pattern.jpg");
}

header .main-menu .item .item__contents .contents__texture h4 {
  color: #999;
  font-weight: 700;
}

header .main-menu .item .item__contents .contents__texture p {
  color: #669900;
  margin: 4px 0 14px;
}

header .badges {
  position: absolute;
  top: 132px;
  right: 12px;
}

header .badges .badge {
  border-radius: 10px;
  overflow: hidden;
  margin-bottom: 12px;
  box-shadow: 4px 4px 10px rgba(0, 0, 0, .15);
  cursor: pointer;
}

/* FOOTER */
footer{
  background-color: #272727;
  border-top: 1px solid #333;
}
footer .inner{
  padding: 40px 0 60px 0;
}
footer .menu{
  display: flex;
  justify-content: center;
}
footer .menu li{
  position: relative;
  /* 그래서 여기에 추가해줌 */
}
footer .menu li::before{
  /* before로 만들어진 요소는 기본적으로 display: inline요소이다. */
  /* 그러나 position: absolute나 fixed를 사용하면 display가 자동으로 block으로 바뀐다. */
  content: "";
  width: 3px;
  height: 3px;
  background-color: #555;
  position: absolute;
  /* ::before의 부모요소는 ::before가 없는 요소이다. */
  top: 0;
  bottom: 0;
  right: -1px;
  /* 이렇게 하면 각 요소의 오른쪽에 점이 생긴다. */
  margin: auto;
}
footer .menu li:last-child::before{
  display: none;
}
footer .menu li a{
  color: #ccc;
  font-size: 12px;
  font-weight: 700;
  padding: 15px;
  /* display: inline요소들은 마진과 패딩의 위아래  여백을 정상적으로 사용할 수 없다.*/
  display: block;
  /* 이렇게 display와 padding을 설정해주는 이유는 사용자가 클릭할 수 있는 넓이를 넓혀주기 위함 */
}
footer .menu li a.green{
  color: #669900;
}
footer .btn-group{
  margin-top: 20px;
  display: flex;
  justify-content: center;
}
footer .btn-group .btn{
  font-size: 12px;
  margin-right: 10px;
}
footer .btn-group .btn:last-child{
  margin-right: 0;
}
footer .info{
  margin-top: 30px;
  text-align: center;
}
footer .info span{
  /* span은 inline요소여서 수직으로 쌓이는 것이 아니라 수평으로 쌓인다고 한다. */
  /* span은 text로 해석된다고 한다. */
  margin-right: 20px;
  color: #999;
  font-size: 12px;
}
footer .info span:last-child{
  margin-right: 0;
}
footer .copyright{
  color: #999;
  font-size: 12px;
  text-align: center;
  margin-top: 12px;
}
footer .logo{
  /* img요소는 가로 너비를 웹페이지에서 알고 있다고 한다.*/
  margin: 30px auto 0;
}
